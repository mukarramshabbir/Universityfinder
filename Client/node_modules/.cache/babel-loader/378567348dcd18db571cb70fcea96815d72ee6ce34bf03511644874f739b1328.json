{"ast":null,"code":"\"use client\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\rbela\\\\Downloads\\\\awais_ (2) (1)\\\\awais_\\\\test\\\\test\\\\src\\\\contexts\\\\QuestionsContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport { createContext, useContext, useState, useEffect } from \"react\";\nimport { AuthContext } from \"./AuthContext\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst QuestionsContext = /*#__PURE__*/createContext();\nexport function useQuestions() {\n  _s();\n  const context = useContext(QuestionsContext);\n  if (!context) {\n    throw new Error(\"useQuestions must be used within a QuestionsProvider\");\n  }\n  return context;\n}\n_s(useQuestions, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nexport function QuestionsProvider({\n  children\n}) {\n  _s2();\n  const [questions, setQuestions] = useState([]);\n  const {\n    currentUser\n  } = useContext(AuthContext);\n\n  // Load questions from localStorage on initial load\n  useEffect(() => {\n    const storedQuestions = JSON.parse(localStorage.getItem(\"questions\")) || [];\n    setQuestions(storedQuestions);\n  }, []);\n\n  // Save questions to localStorage whenever they change\n  useEffect(() => {\n    localStorage.setItem(\"questions\", JSON.stringify(questions));\n  }, [questions]);\n  const addQuestion = text => {\n    const newQuestion = {\n      id: Date.now(),\n      text,\n      author: currentUser.email,\n      timestamp: new Date().toISOString(),\n      answers: []\n    };\n    setQuestions([...questions, newQuestion]);\n  };\n  const addAnswer = (questionId, text) => {\n    const newAnswer = {\n      id: Date.now(),\n      text,\n      author: currentUser.email,\n      timestamp: new Date().toISOString()\n    };\n    setQuestions(questions.map(question => question.id === questionId ? {\n      ...question,\n      answers: [...question.answers, newAnswer]\n    } : question));\n  };\n  const deleteQuestion = questionId => {\n    if (!(currentUser !== null && currentUser !== void 0 && currentUser.isAdmin)) return false;\n    setQuestions(questions.filter(question => question.id !== questionId));\n    return true;\n  };\n  const deleteAnswer = (questionId, answerId) => {\n    if (!(currentUser !== null && currentUser !== void 0 && currentUser.isAdmin)) return false;\n    setQuestions(questions.map(question => question.id === questionId ? {\n      ...question,\n      answers: question.answers.filter(answer => answer.id !== answerId)\n    } : question));\n    return true;\n  };\n  const value = {\n    questions,\n    addQuestion,\n    addAnswer,\n    deleteQuestion,\n    deleteAnswer\n  };\n  return /*#__PURE__*/_jsxDEV(QuestionsContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 89,\n    columnNumber: 5\n  }, this);\n}\n_s2(QuestionsProvider, \"p/skbfYqJjX+LD7xAUGHR3/+x+0=\");\n_c = QuestionsProvider;\nvar _c;\n$RefreshReg$(_c, \"QuestionsProvider\");","map":{"version":3,"names":["_jsxFileName","_s","$RefreshSig$","_s2","createContext","useContext","useState","useEffect","AuthContext","jsxDEV","_jsxDEV","QuestionsContext","useQuestions","context","Error","QuestionsProvider","children","questions","setQuestions","currentUser","storedQuestions","JSON","parse","localStorage","getItem","setItem","stringify","addQuestion","text","newQuestion","id","Date","now","author","email","timestamp","toISOString","answers","addAnswer","questionId","newAnswer","map","question","deleteQuestion","isAdmin","filter","deleteAnswer","answerId","answer","value","Provider","fileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/rbela/Downloads/awais_ (2) (1)/awais_/test/test/src/contexts/QuestionsContext.js"],"sourcesContent":["\"use client\"\r\n\r\nimport { createContext, useContext, useState, useEffect } from \"react\"\r\nimport { AuthContext } from \"./AuthContext\"\r\n\r\nconst QuestionsContext = createContext()\r\n\r\nexport function useQuestions() {\r\n  const context = useContext(QuestionsContext)\r\n  if (!context) {\r\n    throw new Error(\"useQuestions must be used within a QuestionsProvider\")\r\n  }\r\n  return context\r\n}\r\n\r\nexport function QuestionsProvider({ children }) {\r\n  const [questions, setQuestions] = useState([])\r\n  const { currentUser } = useContext(AuthContext)\r\n\r\n  // Load questions from localStorage on initial load\r\n  useEffect(() => {\r\n    const storedQuestions = JSON.parse(localStorage.getItem(\"questions\")) || []\r\n    setQuestions(storedQuestions)\r\n  }, [])\r\n\r\n  // Save questions to localStorage whenever they change\r\n  useEffect(() => {\r\n    localStorage.setItem(\"questions\", JSON.stringify(questions))\r\n  }, [questions])\r\n\r\n  const addQuestion = (text) => {\r\n    const newQuestion = {\r\n      id: Date.now(),\r\n      text,\r\n      author: currentUser.email,\r\n      timestamp: new Date().toISOString(),\r\n      answers: []\r\n    }\r\n    setQuestions([...questions, newQuestion])\r\n  }\r\n\r\n  const addAnswer = (questionId, text) => {\r\n    const newAnswer = {\r\n      id: Date.now(),\r\n      text,\r\n      author: currentUser.email,\r\n      timestamp: new Date().toISOString()\r\n    }\r\n\r\n    setQuestions(\r\n      questions.map((question) =>\r\n        question.id === questionId\r\n          ? { ...question, answers: [...question.answers, newAnswer] }\r\n          : question\r\n      )\r\n    )\r\n  }\r\n\r\n  const deleteQuestion = (questionId) => {\r\n    if (!currentUser?.isAdmin) return false\r\n    setQuestions(questions.filter(question => question.id !== questionId))\r\n    return true\r\n  }\r\n\r\n  const deleteAnswer = (questionId, answerId) => {\r\n    if (!currentUser?.isAdmin) return false\r\n    setQuestions(\r\n      questions.map(question =>\r\n        question.id === questionId\r\n          ? {\r\n              ...question,\r\n              answers: question.answers.filter(answer => answer.id !== answerId)\r\n            }\r\n          : question\r\n      )\r\n    )\r\n    return true\r\n  }\r\n\r\n  const value = {\r\n    questions,\r\n    addQuestion,\r\n    addAnswer,\r\n    deleteQuestion,\r\n    deleteAnswer\r\n  }\r\n\r\n  return (\r\n    <QuestionsContext.Provider value={value}>\r\n      {children}\r\n    </QuestionsContext.Provider>\r\n  )\r\n} "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}