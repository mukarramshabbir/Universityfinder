{"ast":null,"code":"\"use client\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\rbela\\\\Downloads\\\\awais_ (2) (1)\\\\awais_\\\\test\\\\test\\\\src\\\\contexts\\\\AuthContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport { createContext, useContext, useState, useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const AuthContext = /*#__PURE__*/createContext();\nexport function useAuth() {\n  _s();\n  return useContext(AuthContext);\n}\n_s(useAuth, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nexport function AuthProvider({\n  children\n}) {\n  _s2();\n  const [currentUser, setCurrentUser] = useState(null);\n  const [users, setUsers] = useState([]);\n  const [loading, setLoading] = useState(true);\n  useEffect(() => {\n    // Create admin user if it doesn't exist\n    const storedUsers = JSON.parse(localStorage.getItem(\"users\")) || [];\n    const adminUser = {\n      id: 1,\n      username: \"admin\",\n      email: \"admin@admin.com\",\n      password: \"admin\",\n      bookmarks: [],\n      isAdmin: true\n    };\n\n    // Check if admin exists, if not add it\n    if (!storedUsers.some(user => user.username === \"admin\")) {\n      const updatedUsers = [adminUser];\n      setUsers(updatedUsers);\n      localStorage.setItem(\"users\", JSON.stringify(updatedUsers));\n    } else {\n      setUsers(storedUsers);\n    }\n    const storedUser = JSON.parse(localStorage.getItem(\"currentUser\"));\n    if (storedUser) {\n      setCurrentUser(storedUser);\n    }\n    setLoading(false);\n  }, []);\n  const login = (username, password) => {\n    const user = users.find(u => u.username === username && u.password === password);\n    if (user) {\n      setCurrentUser(user);\n      localStorage.setItem(\"currentUser\", JSON.stringify(user));\n      return true;\n    }\n    return false;\n  };\n  const register = (username, email, password) => {\n    if (users.some(u => u.username === username)) {\n      return false;\n    }\n    const newUser = {\n      id: Date.now(),\n      username,\n      email,\n      password,\n      bookmarks: [],\n      isAdmin: false\n    };\n    const updatedUsers = [...users, newUser];\n    setUsers(updatedUsers);\n    localStorage.setItem(\"users\", JSON.stringify(updatedUsers));\n    setCurrentUser(newUser);\n    localStorage.setItem(\"currentUser\", JSON.stringify(newUser));\n    return true;\n  };\n  const logout = () => {\n    setCurrentUser(null);\n    localStorage.removeItem(\"currentUser\");\n  };\n  const updateUser = updatedUserData => {\n    setCurrentUser(updatedUserData);\n    localStorage.setItem(\"currentUser\", JSON.stringify(updatedUserData));\n    const updatedUsers = users.map(user => user.id === updatedUserData.id ? updatedUserData : user);\n    setUsers(updatedUsers);\n    localStorage.setItem(\"users\", JSON.stringify(updatedUsers));\n  };\n  const deleteUser = userId => {\n    if (!(currentUser !== null && currentUser !== void 0 && currentUser.isAdmin)) return false;\n    const updatedUsers = users.filter(user => user.id !== userId);\n    setUsers(updatedUsers);\n    localStorage.setItem(\"users\", JSON.stringify(updatedUsers));\n    if (currentUser.id === userId) {\n      logout();\n    }\n    return true;\n  };\n  const value = {\n    currentUser,\n    users,\n    login,\n    register,\n    logout,\n    updateUser,\n    deleteUser\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: value,\n    children: !loading && children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 117,\n    columnNumber: 10\n  }, this);\n}\n_s2(AuthProvider, \"iTQSDCOdPKz7Cd1LiGHVWwr+VeI=\");\n_c = AuthProvider;\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["_jsxFileName","_s","$RefreshSig$","_s2","createContext","useContext","useState","useEffect","jsxDEV","_jsxDEV","AuthContext","useAuth","AuthProvider","children","currentUser","setCurrentUser","users","setUsers","loading","setLoading","storedUsers","JSON","parse","localStorage","getItem","adminUser","id","username","email","password","bookmarks","isAdmin","some","user","updatedUsers","setItem","stringify","storedUser","login","find","u","register","newUser","Date","now","logout","removeItem","updateUser","updatedUserData","map","deleteUser","userId","filter","value","Provider","fileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/rbela/Downloads/awais_ (2) (1)/awais_/test/test/src/contexts/AuthContext.js"],"sourcesContent":["\"use client\"\n\nimport { createContext, useContext, useState, useEffect } from \"react\"\n\nexport const AuthContext = createContext()\n\nexport function useAuth() {\n  return useContext(AuthContext)\n}\n\nexport function AuthProvider({ children }) {\n  const [currentUser, setCurrentUser] = useState(null)\n  const [users, setUsers] = useState([])\n  const [loading, setLoading] = useState(true)\n\n  useEffect(() => {\n    // Create admin user if it doesn't exist\n    const storedUsers = JSON.parse(localStorage.getItem(\"users\")) || []\n    const adminUser = {\n      id: 1,\n      username: \"admin\",\n      email: \"admin@admin.com\",\n      password: \"admin\",\n      bookmarks: [],\n      isAdmin: true\n    }\n\n    // Check if admin exists, if not add it\n    if (!storedUsers.some(user => user.username === \"admin\")) {\n      const updatedUsers = [adminUser]\n      setUsers(updatedUsers)\n      localStorage.setItem(\"users\", JSON.stringify(updatedUsers))\n    } else {\n      setUsers(storedUsers)\n    }\n\n    const storedUser = JSON.parse(localStorage.getItem(\"currentUser\"))\n    if (storedUser) {\n      setCurrentUser(storedUser)\n    }\n    setLoading(false)\n  }, [])\n\n  const login = (username, password) => {\n    const user = users.find(\n      (u) => u.username === username && u.password === password\n    )\n    if (user) {\n      setCurrentUser(user)\n      localStorage.setItem(\"currentUser\", JSON.stringify(user))\n      return true\n    }\n    return false\n  }\n\n  const register = (username, email, password) => {\n    if (users.some((u) => u.username === username)) {\n      return false\n    }\n\n    const newUser = {\n      id: Date.now(),\n      username,\n      email,\n      password,\n      bookmarks: [],\n      isAdmin: false\n    }\n\n    const updatedUsers = [...users, newUser]\n    setUsers(updatedUsers)\n    localStorage.setItem(\"users\", JSON.stringify(updatedUsers))\n    setCurrentUser(newUser)\n    localStorage.setItem(\"currentUser\", JSON.stringify(newUser))\n    return true\n  }\n\n  const logout = () => {\n    setCurrentUser(null)\n    localStorage.removeItem(\"currentUser\")\n  }\n\n  const updateUser = (updatedUserData) => {\n    setCurrentUser(updatedUserData)\n    localStorage.setItem(\"currentUser\", JSON.stringify(updatedUserData))\n    \n    const updatedUsers = users.map(user => \n      user.id === updatedUserData.id ? updatedUserData : user\n    )\n    setUsers(updatedUsers)\n    localStorage.setItem(\"users\", JSON.stringify(updatedUsers))\n  }\n\n  const deleteUser = (userId) => {\n    if (!currentUser?.isAdmin) return false\n    \n    const updatedUsers = users.filter(user => user.id !== userId)\n    setUsers(updatedUsers)\n    localStorage.setItem(\"users\", JSON.stringify(updatedUsers))\n    \n    if (currentUser.id === userId) {\n      logout()\n    }\n    return true\n  }\n\n  const value = {\n    currentUser,\n    users,\n    login,\n    register,\n    logout,\n    updateUser,\n    deleteUser\n  }\n\n  return <AuthContext.Provider value={value}>{!loading && children}</AuthContext.Provider>\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}