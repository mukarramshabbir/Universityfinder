{"ast":null,"code":"\"use client\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\rbela\\\\Downloads\\\\awais_ (2) (1)\\\\awais_\\\\test\\\\test\\\\src\\\\contexts\\\\AuthContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport { createContext, useContext, useState, useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext();\nexport function useAuth() {\n  _s();\n  return useContext(AuthContext);\n}\n_s(useAuth, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nexport function AuthProvider({\n  children\n}) {\n  _s2();\n  const [currentUser, setCurrentUser] = useState(null);\n  const [loading, setLoading] = useState(true);\n\n  // Check if user is logged in from localStorage on initial load\n  useEffect(() => {\n    const user = localStorage.getItem(\"user\");\n    if (user) {\n      setCurrentUser(JSON.parse(user));\n    }\n    setLoading(false);\n  }, []);\n\n  // Login function\n  const login = (email, password) => {\n    // In a real app, you would validate against a backend\n    // For demo purposes, we'll just check if the email contains \"@\" and password length\n    if (email.includes(\"@\") && password.length >= 6) {\n      const user = {\n        email\n      };\n      localStorage.setItem(\"user\", JSON.stringify(user));\n      setCurrentUser(user);\n      return true;\n    }\n    return false;\n  };\n\n  // Register function\n  const register = (email, password) => {\n    // In a real app, you would send this to a backend\n    // For demo purposes, we'll just check if the email contains \"@\" and password length\n    if (email.includes(\"@\") && password.length >= 6) {\n      const user = {\n        email\n      };\n      localStorage.setItem(\"user\", JSON.stringify(user));\n      setCurrentUser(user);\n      return true;\n    }\n    return false;\n  };\n\n  // Logout function\n  const logout = () => {\n    localStorage.removeItem(\"user\");\n    setCurrentUser(null);\n  };\n  const value = {\n    currentUser,\n    login,\n    register,\n    logout\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: value,\n    children: !loading && children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 10\n  }, this);\n}\n_s2(AuthProvider, \"+Bt7EujFHjK6mRV3YX1iAtSqXvQ=\");\n_c = AuthProvider;\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["_jsxFileName","_s","$RefreshSig$","_s2","createContext","useContext","useState","useEffect","jsxDEV","_jsxDEV","AuthContext","useAuth","AuthProvider","children","currentUser","setCurrentUser","loading","setLoading","user","localStorage","getItem","JSON","parse","login","email","password","includes","length","setItem","stringify","register","logout","removeItem","value","Provider","fileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/rbela/Downloads/awais_ (2) (1)/awais_/test/test/src/contexts/AuthContext.js"],"sourcesContent":["\"use client\"\n\nimport { createContext, useContext, useState, useEffect } from \"react\"\n\nconst AuthContext = createContext()\n\nexport function useAuth() {\n  return useContext(AuthContext)\n}\n\nexport function AuthProvider({ children }) {\n  const [currentUser, setCurrentUser] = useState(null)\n  const [loading, setLoading] = useState(true)\n\n  // Check if user is logged in from localStorage on initial load\n  useEffect(() => {\n    const user = localStorage.getItem(\"user\")\n    if (user) {\n      setCurrentUser(JSON.parse(user))\n    }\n    setLoading(false)\n  }, [])\n\n  // Login function\n  const login = (email, password) => {\n    // In a real app, you would validate against a backend\n    // For demo purposes, we'll just check if the email contains \"@\" and password length\n    if (email.includes(\"@\") && password.length >= 6) {\n      const user = { email }\n      localStorage.setItem(\"user\", JSON.stringify(user))\n      setCurrentUser(user)\n      return true\n    }\n    return false\n  }\n\n  // Register function\n  const register = (email, password) => {\n    // In a real app, you would send this to a backend\n    // For demo purposes, we'll just check if the email contains \"@\" and password length\n    if (email.includes(\"@\") && password.length >= 6) {\n      const user = { email }\n      localStorage.setItem(\"user\", JSON.stringify(user))\n      setCurrentUser(user)\n      return true\n    }\n    return false\n  }\n\n  // Logout function\n  const logout = () => {\n    localStorage.removeItem(\"user\")\n    setCurrentUser(null)\n  }\n\n  const value = {\n    currentUser,\n    login,\n    register,\n    logout,\n  }\n\n  return <AuthContext.Provider value={value}>{!loading && children}</AuthContext.Provider>\n}\n"],"mappings":"AAAA,YAAY;;AAAA,IAAAA,YAAA;EAAAC,EAAA,GAAAC,YAAA;EAAAC,GAAA,GAAAD,YAAA;AAEZ,SAASE,aAAa,EAAEC,UAAU,EAAEC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEtE,MAAMC,WAAW,gBAAGN,aAAa,CAAC,CAAC;AAEnC,OAAO,SAASO,OAAOA,CAAA,EAAG;EAAAV,EAAA;EACxB,OAAOI,UAAU,CAACK,WAAW,CAAC;AAChC;AAACT,EAAA,CAFeU,OAAO;AAIvB,OAAO,SAASC,YAAYA,CAAC;EAAEC;AAAS,CAAC,EAAE;EAAAV,GAAA;EACzC,MAAM,CAACW,WAAW,EAAEC,cAAc,CAAC,GAAGT,QAAQ,CAAC,IAAI,CAAC;EACpD,MAAM,CAACU,OAAO,EAAEC,UAAU,CAAC,GAAGX,QAAQ,CAAC,IAAI,CAAC;;EAE5C;EACAC,SAAS,CAAC,MAAM;IACd,MAAMW,IAAI,GAAGC,YAAY,CAACC,OAAO,CAAC,MAAM,CAAC;IACzC,IAAIF,IAAI,EAAE;MACRH,cAAc,CAACM,IAAI,CAACC,KAAK,CAACJ,IAAI,CAAC,CAAC;IAClC;IACAD,UAAU,CAAC,KAAK,CAAC;EACnB,CAAC,EAAE,EAAE,CAAC;;EAEN;EACA,MAAMM,KAAK,GAAGA,CAACC,KAAK,EAAEC,QAAQ,KAAK;IACjC;IACA;IACA,IAAID,KAAK,CAACE,QAAQ,CAAC,GAAG,CAAC,IAAID,QAAQ,CAACE,MAAM,IAAI,CAAC,EAAE;MAC/C,MAAMT,IAAI,GAAG;QAAEM;MAAM,CAAC;MACtBL,YAAY,CAACS,OAAO,CAAC,MAAM,EAAEP,IAAI,CAACQ,SAAS,CAACX,IAAI,CAAC,CAAC;MAClDH,cAAc,CAACG,IAAI,CAAC;MACpB,OAAO,IAAI;IACb;IACA,OAAO,KAAK;EACd,CAAC;;EAED;EACA,MAAMY,QAAQ,GAAGA,CAACN,KAAK,EAAEC,QAAQ,KAAK;IACpC;IACA;IACA,IAAID,KAAK,CAACE,QAAQ,CAAC,GAAG,CAAC,IAAID,QAAQ,CAACE,MAAM,IAAI,CAAC,EAAE;MAC/C,MAAMT,IAAI,GAAG;QAAEM;MAAM,CAAC;MACtBL,YAAY,CAACS,OAAO,CAAC,MAAM,EAAEP,IAAI,CAACQ,SAAS,CAACX,IAAI,CAAC,CAAC;MAClDH,cAAc,CAACG,IAAI,CAAC;MACpB,OAAO,IAAI;IACb;IACA,OAAO,KAAK;EACd,CAAC;;EAED;EACA,MAAMa,MAAM,GAAGA,CAAA,KAAM;IACnBZ,YAAY,CAACa,UAAU,CAAC,MAAM,CAAC;IAC/BjB,cAAc,CAAC,IAAI,CAAC;EACtB,CAAC;EAED,MAAMkB,KAAK,GAAG;IACZnB,WAAW;IACXS,KAAK;IACLO,QAAQ;IACRC;EACF,CAAC;EAED,oBAAOtB,OAAA,CAACC,WAAW,CAACwB,QAAQ;IAACD,KAAK,EAAEA,KAAM;IAAApB,QAAA,EAAE,CAACG,OAAO,IAAIH;EAAQ;IAAAsB,QAAA,EAAAnC,YAAA;IAAAoC,UAAA;IAAAC,YAAA;EAAA,OAAuB,CAAC;AAC1F;AAAClC,GAAA,CArDeS,YAAY;AAAA0B,EAAA,GAAZ1B,YAAY;AAAA,IAAA0B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}