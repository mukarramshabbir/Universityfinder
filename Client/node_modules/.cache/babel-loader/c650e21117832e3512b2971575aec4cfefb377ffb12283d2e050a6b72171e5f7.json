{"ast":null,"code":"\"use client\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\rbela\\\\Downloads\\\\W1899505 FYP\\\\W1899505 FYP\\\\test\\\\test\\\\src\\\\contexts\\\\QuestionsContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport { createContext, useContext, useState, useEffect } from \"react\";\nimport { AuthContext } from \"./AuthContext\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst QuestionsContext = /*#__PURE__*/createContext();\nexport function useQuestions() {\n  _s();\n  const context = useContext(QuestionsContext);\n  if (!context) {\n    throw new Error(\"useQuestions must be used within a QuestionsProvider\");\n  }\n  return context;\n}\n_s(useQuestions, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nexport function QuestionsProvider({\n  children\n}) {\n  _s2();\n  const [questions, setQuestions] = useState([]);\n  const {\n    currentUser,\n    updateUser\n  } = useContext(AuthContext);\n\n  // Load questions from localStorage on initial load\n  useEffect(() => {\n    const storedQuestions = JSON.parse(localStorage.getItem(\"questions\")) || [];\n    setQuestions(storedQuestions);\n  }, []);\n\n  // Save questions to localStorage whenever they change\n  useEffect(() => {\n    localStorage.setItem(\"questions\", JSON.stringify(questions));\n  }, [questions]);\n  const addQuestion = async text => {\n    const newQuestion = {\n      id: Date.now(),\n      text,\n      author: currentUser.email,\n      timestamp: new Date().toISOString(),\n      answers: []\n    };\n\n    // Update questions state\n    setQuestions([...questions, newQuestion]);\n\n    // Update user's question count\n    if (currentUser) {\n      const updatedUser = {\n        ...currentUser,\n        questions: [...(currentUser.questions || []), newQuestion.id]\n      };\n      await updateUser(updatedUser);\n      localStorage.setItem(\"currentUser\", JSON.stringify(updatedUser));\n    }\n  };\n  const addAnswer = (questionId, text) => {\n    const newAnswer = {\n      id: Date.now(),\n      text,\n      author: currentUser.email,\n      timestamp: new Date().toISOString()\n    };\n    setQuestions(questions.map(question => question.id === questionId ? {\n      ...question,\n      answers: [...question.answers, newAnswer]\n    } : question));\n  };\n  const deleteQuestion = questionId => {\n    if (!(currentUser !== null && currentUser !== void 0 && currentUser.isAdmin)) return false;\n    setQuestions(questions.filter(question => question.id !== questionId));\n    return true;\n  };\n  const deleteAnswer = (questionId, answerId) => {\n    if (!(currentUser !== null && currentUser !== void 0 && currentUser.isAdmin)) return false;\n    setQuestions(questions.map(question => question.id === questionId ? {\n      ...question,\n      answers: question.answers.filter(answer => answer.id !== answerId)\n    } : question));\n    return true;\n  };\n  const value = {\n    questions,\n    addQuestion,\n    addAnswer,\n    deleteQuestion,\n    deleteAnswer\n  };\n  return /*#__PURE__*/_jsxDEV(QuestionsContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 101,\n    columnNumber: 5\n  }, this);\n}\n_s2(QuestionsProvider, \"cWjyZu+ebJxRQKb+xR4EpWFUHgw=\");\n_c = QuestionsProvider;\nvar _c;\n$RefreshReg$(_c, \"QuestionsProvider\");","map":{"version":3,"names":["_jsxFileName","_s","$RefreshSig$","_s2","createContext","useContext","useState","useEffect","AuthContext","jsxDEV","_jsxDEV","QuestionsContext","useQuestions","context","Error","QuestionsProvider","children","questions","setQuestions","currentUser","updateUser","storedQuestions","JSON","parse","localStorage","getItem","setItem","stringify","addQuestion","text","newQuestion","id","Date","now","author","email","timestamp","toISOString","answers","updatedUser","addAnswer","questionId","newAnswer","map","question","deleteQuestion","isAdmin","filter","deleteAnswer","answerId","answer","value","Provider","fileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/rbela/Downloads/W1899505 FYP/W1899505 FYP/test/test/src/contexts/QuestionsContext.js"],"sourcesContent":["\"use client\"\r\n\r\nimport { createContext, useContext, useState, useEffect } from \"react\"\r\nimport { AuthContext } from \"./AuthContext\"\r\n\r\nconst QuestionsContext = createContext()\r\n\r\nexport function useQuestions() {\r\n  const context = useContext(QuestionsContext)\r\n  if (!context) {\r\n    throw new Error(\"useQuestions must be used within a QuestionsProvider\")\r\n  }\r\n  return context\r\n}\r\n\r\nexport function QuestionsProvider({ children }) {\r\n  const [questions, setQuestions] = useState([])\r\n  const { currentUser, updateUser } = useContext(AuthContext)\r\n\r\n  // Load questions from localStorage on initial load\r\n  useEffect(() => {\r\n    const storedQuestions = JSON.parse(localStorage.getItem(\"questions\")) || []\r\n    setQuestions(storedQuestions)\r\n  }, [])\r\n\r\n  // Save questions to localStorage whenever they change\r\n  useEffect(() => {\r\n    localStorage.setItem(\"questions\", JSON.stringify(questions))\r\n  }, [questions])\r\n\r\n  const addQuestion = async (text) => {\r\n    const newQuestion = {\r\n      id: Date.now(),\r\n      text,\r\n      author: currentUser.email,\r\n      timestamp: new Date().toISOString(),\r\n      answers: []\r\n    }\r\n    \r\n    // Update questions state\r\n    setQuestions([...questions, newQuestion])\r\n    \r\n    // Update user's question count\r\n    if (currentUser) {\r\n      const updatedUser = {\r\n        ...currentUser,\r\n        questions: [...(currentUser.questions || []), newQuestion.id]\r\n      }\r\n      await updateUser(updatedUser)\r\n      localStorage.setItem(\"currentUser\", JSON.stringify(updatedUser))\r\n    }\r\n  }\r\n\r\n  const addAnswer = (questionId, text) => {\r\n    const newAnswer = {\r\n      id: Date.now(),\r\n      text,\r\n      author: currentUser.email,\r\n      timestamp: new Date().toISOString()\r\n    }\r\n\r\n    setQuestions(\r\n      questions.map((question) =>\r\n        question.id === questionId\r\n          ? { ...question, answers: [...question.answers, newAnswer] }\r\n          : question\r\n      )\r\n    )\r\n  }\r\n\r\n  const deleteQuestion = (questionId) => {\r\n    if (!currentUser?.isAdmin) return false\r\n    setQuestions(questions.filter(question => question.id !== questionId))\r\n    return true\r\n  }\r\n\r\n  const deleteAnswer = (questionId, answerId) => {\r\n    if (!currentUser?.isAdmin) return false\r\n    setQuestions(\r\n      questions.map(question =>\r\n        question.id === questionId\r\n          ? {\r\n              ...question,\r\n              answers: question.answers.filter(answer => answer.id !== answerId)\r\n            }\r\n          : question\r\n      )\r\n    )\r\n    return true\r\n  }\r\n\r\n  const value = {\r\n    questions,\r\n    addQuestion,\r\n    addAnswer,\r\n    deleteQuestion,\r\n    deleteAnswer\r\n  }\r\n\r\n  return (\r\n    <QuestionsContext.Provider value={value}>\r\n      {children}\r\n    </QuestionsContext.Provider>\r\n  )\r\n} "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}